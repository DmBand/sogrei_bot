import sqlite3


class DBHandler:
    def __init__(self, db_name='sogreym_db'):
        self.db_name = db_name
        # self.conn = sqlite3.connect(self.db_name)

    def edit_price(self, product: str = None):
        pass

    def edit_stock(self):
        pass

    def get_drywall(self, description: str = None) -> str or None:
        """ –ì–∏–ø—Å–æ–∫–∞—Ä—Ç–æ–Ω """

        types = [
            '–û–≥–Ω–µ—É–ø–æ—Ä–Ω—ã–π',
            '–í–ª–∞–≥–æ—Å—Ç–æ–π–∫–∏–π',
            '–û–±—ã—á–Ω—ã–π'
        ]
        if not description or description not in types:
            return

        conn = sqlite3.connect(self.db_name)
        row = conn.execute(
            "SELECT name, price "
            "FROM goods "
            f"WHERE description = '{description}' AND in_stock = 1"
        )
        data = row.fetchall()
        if data:
            answer = 'üíµ –¶–µ–Ω–∞ –∑–∞ 1 –ª–∏—Å—Ç 1200*2500–º–º (3–º2): üíµ\n\n'
            for dry in data:
                answer += f'üî∏ {dry[0]}: <b>{"%.2f" % dry[1]} —Ä—É–±.</b>\n'
        else:
            answer = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏...'
        conn.close()
        return answer

    def get_dowel(self, description: str = None) -> str or None:
        """ –î—é–±–µ–ª—è –¥–ª—è —Ç–µ–ø–ª–æ–∏–∑–æ–ª—è—Ü–∏–∏ """

        types = [
            '–°—Ç–∞–ª—å–Ω–æ–π –≥–≤–æ–∑–¥—å',
            '–ü–ª–∞—Å—Ç–∏–∫–æ–≤—ã–π –≥–≤–æ–∑–¥—å',
        ]
        if not description or description not in types:
            return

        conn = sqlite3.connect(self.db_name)
        row = conn.execute(
            "SELECT name, price "
            "FROM goods "
            f"WHERE description = '{description}' AND in_stock = 1"
        )
        data = row.fetchall()
        if data:
            answer = 'üíµ –¶–µ–Ω–∞ –∑–∞ 1—à—Ç: üíµ\n\n'
            for dry in data:
                answer += f'üî∏ {dry[0]}: <b>{"%.2f" % dry[1]} —Ä—É–±.</b>\n'
        else:
            answer = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏...'
        conn.close()
        return answer

    def get_paints(self, description: str = None, description2: str = None) -> str or None:
        """ –ö—Ä–∞—Å–∫–∏ """

        types = [
            '–¢–∞–π—Ñ—É–Ω –ú–∞—Å—Ç–µ—Ä',
            'Condor',
            'Kapral',
            'Sniezka',
            'Malevanka'
        ]
        if not description or description not in types:
            return

        conn = sqlite3.connect(self.db_name)
        if description2:
            row = conn.execute(
                "SELECT name, price "
                "FROM goods "
                f"WHERE description = '{description}' "
                f"AND description_2 = '{description2}'"
                f"AND in_stock = 1"
            )
        else:
            row = conn.execute(
                "SELECT name, price "
                "FROM goods "
                f"WHERE description = '{description}' AND in_stock = 1"
            )

        data = row.fetchall()
        if data:
            answer = 'üíµ –¶–µ–Ω–∞ –∑–∞ 1 –≤–µ–¥—Ä–æ: üíµ\n\n'
            for dry in data:
                answer += f'üî∏ {dry[0]}: <b>{"%.2f" % dry[1]} —Ä—É–±.</b>\n'
        else:
            answer = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏...'
        conn.close()
        return answer

    def get_mineral_wool(self) -> str:
        conn = sqlite3.connect(self.db_name)
        row = conn.execute(
            "SELECT name, price "
            "FROM goods "
            "WHERE category = 6 AND in_stock = 1"
        )
        data = row.fetchall()
        if data:
            answer = 'üíµ –¶–µ–Ω–∞ –∑–∞ 1 —É–ø–∞–∫–æ–≤–∫—É: üíµ\n\n'
            for dry in data:
                answer += f'üî∏ {dry[0]}: <b>{"%.2f" % dry[1]} —Ä—É–±.</b>\n'
        else:
            answer = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏...'
        conn.close()
        return answer

# conn = sqlite3.connect('../sogreym_db')
# cursor = conn.cursor()
#
# res = cursor.execute('SELECT * FROM category;')
# print(res.fetchall())
